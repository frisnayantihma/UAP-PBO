//contoh jdbc

package jdbc_project;

import DB.DBHelper;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author user
 */
public class MahasiswaModel {
    private final Connection conn;
    private Object CONN;

    public MahasiswaModel() {
        this.conn = DBHelper.getConnection();
}
    public void addMahasiswa(Mahasiswa mahasiswa){
        String insert = "INSERT INTO mahasiswa VALUES ('"
                + mahasiswa.getNpm() + "', '" + mahasiswa.getNama()
                + "');";
        
        try {
            if(conn.createStatement().executeUpdate(insert)>0){
                System.out.println("Berhasil Memasukkan Data!");
            }else{
                System.out.println("Gagal Memasukkan Data!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(MahasiswaModel.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Gagal Memasukkan Data!");
        }
    }
    
    public ArrayList<Mahasiswa> getMahasiswa(){
        String query = "SELECT * FROM mahasiswa";
        ArrayList<Mahasiswa> mahasiswa = new ArrayList<Mahasiswa>();
        
        try {
            ResultSet rs = conn.createStatement().executeQuery(query);
            while(rs.next()){
                Mahasiswa temp = new Mahasiswa(rs.getString("npm"),rs.getString("nama"));
                mahasiswa.add(temp);
            }
            System.out.println("Berhasil Mengambil Data!");
        } catch (SQLException ex) {
            Logger.getLogger(MahasiswaModel.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Gagal Mengambil Data!");
        }
        return mahasiswa;
    }
    public void updateMahasiswa(Mahasiswa mahasiswa){
        String update ="UPDATE mahasiswa SET nama = '"+ mahasiswa.getNama() + "'WHERE npm = '"+mahasiswa.getNpm()+"'";
        try {
         if(conn.createStatement().executeUpdate(update)>0){
            System.out.println("Berhasil Update Data!");
         }else{
             System.out.println("Gagal Update Data!");
         }
        } catch (SQLException ex) {
            Logger.getLogger(MahasiswaModel.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Gagal Update Data!");
        }
    }
    
    public void deleteMahasiswa(Mahasiswa mahasiswa){
        String delete ="DELETE FROM mahasiswa WHERE npm = '"+mahasiswa.getNpm()+"'";
        try {
            if(conn.createStatement().executeUpdate(delete)>0){
                System.out.println("Berhasil Delete Data!");
            }else{
                System.out.println("Gagal Delete Data!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(MahasiswaModel.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Gagal Delete Data!");
        }
    }
        
    
}

//...
